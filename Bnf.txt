<tipo> ::= int|real|string|boolean
<booleano> ::= True | False
<digito> ::= 0|1|2|3|4|5|6|7|8|9
<letra> ::= 'a'|'b'|'c'.....'x'|'y'|'z'|'A'|'B'|'C'.....'X'|'Y'|'Z'|' '
<operador> ::= +|-|/|*  ESTE CREO QUE NO SIRVE
<comparadores> ::= >|>=|<|<=|==

<entero> ::= <digito>|<entero><digito>
<real> ::= <entero>.<entero>|.<entero>|<entero>.
<alfanumerico> ::= <letra>|<digito>|<alfanumerico><letra>|<alfanumerico><digito>
<string> ::= "<alfanumerico>"
<dato> ::= <entero>|<real>|<string>
<numero> ::= <entero>|<real>
<lista> ::=   FALTA TERMINAR

<identificador> ::= <letra>|<letra><alfanumerico> 

<declaracionvar> ::= <variable>:<tipo> | <declaracionvar>; <variable>:<tipo>
<sentenciadeclaracionvar> ::= DEFVAR <declaracionvar> ENDDEF

<definicionconstante> ::= CONST <identificador> = <dato>;

<asignacion> ::= <identificador> = <>;  FALTA TERMINAR

<expresion> ::= <expresion>+<termino>|<expresion>-<termino>|<termino>
<termino> ::= <termino>*<factor>|<termino>/<factor>|<factor>
<factor> ::= <numero>|<identificador>|(<expresion>)

FALTA LO DE LA CONCATENACION DE STRING

<entrada> ::= GET <identificador>;
<salida> ::= PUT <expresion>;

<comparacion> ::=   FALTA TERMINAR
<condicion> ::= <booleano>|<comparacion>
<acciones> ::=    FALTA TERMINAR

<repeat> ::= REPEAT <acciones> UNTIL <condicion>;
<if> ::= IF (<condicion>) THEN <acciones> END

<unaryif> ::= <identificador> = (<condicion> ? <expresion>; <expresion>)
<qequal> ::= QEqual(<expresion>,<lista>)
